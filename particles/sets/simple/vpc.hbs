  {{!-- VPC --}}

  {{parameter "vpc/cidr" logicalId="VpcCidr" default=defaultCidr}}

  {{
    resource "m:core" "spec"
    type="AWS::EC2::VPC"
    logicalId="Vpc"
    CidrBlock=(ref "VpcCidr")
    InstanceTenancy="default"
    EnableDnsSupport="true"
    EnableDnsHostnames="true"
    Tags=(arrayify (partial "name_tag"))
  }}

  {{set "vpc/output_all" vpcLogicalId="Vpc"}}


  {{!-- Internet Gateway --}}

  {{set 'simple/create_internet_gateway' parameterLogicalId="CreateInternetGateway"}}

  {{
    resource "m:core" "spec"
    type="AWS::EC2::InternetGateway"
    logicalId="InternetGateway"
    condition=(scopeId "CreateInternetGatewayIsTrueCondition")
    Tags=(arrayify (partial "name_tag"))
  }}

  {{
    resource "m:core" "spec"
    type="AWS::EC2::VPCGatewayAttachment"
    logicalId="GatewayAttachment"
    condition=(scopeId "CreateInternetGatewayIsTrueCondition")
    VpcId=(ref "Vpc")
    InternetGatewayId=(ref "InternetGateway")
  }}

  {{#resource "m:core" "spec"
    type="AWS::EC2::RouteTable"
    logicalId="PublicRouteTable"
    VpcId=(ref "Vpc")
    Tags=(
      arrayify
      (partial "name_tag")
      (
        helper "m:core" "propertySpec"
        type="Tag"
        Key="Network"
        Value="Public"
      )
    )
  }}

  {{
    resource "m:core" "spec"
    type="AWS::EC2::Route"
    logicalId="PublicRoute"
    condition=(scopeId "CreateInternetGatewayIsTrueCondition")
    DestinationCidrBlock="0.0.0.0/0"
    RouteTableId=(ref "PublicRouteTable")
    GatewayId=(ref "InternetGateway")
  }}

  {{output "m:core" "base" logicalId="PublicRouteTableId" value=(ref "PublicRouteTable")}}
